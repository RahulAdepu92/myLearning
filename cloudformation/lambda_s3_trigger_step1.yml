# @Author : Rahul Adepu
# This yml script creates lambda functions where the code is imported from layer in <Layers> through the handler <Handler>
# Note : 1. prior to execution of this yml make sure lambda layer is created and latest code is added to its latest version
#        2. creates lambda functions and allows s3 buckets to trigger them by setting invoke permission resource
#        3. FunctionName is the lambda name and can be customized 

AWSTemplateFormatVersion: '2010-09-09'
Description: 'Accumhub Lambda Cloud Formation Template'
Parameters:
  accountProfile:
    Description: provides the AWS account number as per enviroment
    Type: String
    Default: 795038802291
  scriptsPath:
    Type: String
    Default: irx-accumhub-dev-data/deployment
    Description: provides the bucket name where glue scripts, .whl and .zip needed for both Glue jobs and Lamda functions are resided.
  triggerBucket:
    Type: String
    Default: irx-accumhub-cft-test
    Description: provides the bucket name on which triggers are enabled for Lambda functions to execute. This may vary from 'dataBucket' as unit testing triggers has to be done on any dummy bucket to avoid overriding the existing triggers.
  dataBucket:
    Type: String
    Default: irx-accumhub-dev-data
    Description: provides the bucket name where the incoming/outgoing files data is processed and stored.
  layerWithVersionArn:
    Type: String
    Default: arn:aws:lambda:us-east-1:795038802291:layer:irxah-common-py:1
    Description: provides ARN of layer name and version to be used for importing code to Lambda functions
  redshiftGlueArn:
    Type: String
    Default: arn:aws:iam::795038802291:role/irx-accum-phi-redshift-glue
    Description: provides ARN of redshift-glue role that provides permissions to run execute copy/unload commands in redshift database
  lambdaRoleArn:
    Type: String
    Default: arn:aws:iam::795038802291:role/irx-accum-lambda-s3-execute-role
    Description: provides ARN of lambda role that provides permissions to execute Lambda functions
  lambdaRoleArnMoveToCfx:
    Type: String
    Default: arn:aws:iam::795038802291:role/irx-accum-lambda-s3-role
    Description: provides ARN of lambda role that provides permissions to execute Lambda function that copies outbound files to CFX s3 bucket.
  snsArn:
    Type: String
    Default: arn:aws:sns:us-east-1:795038802291:AHUB_EMAIL_NOTIF
    Description: provides ARN of SNS topic for receiving email notification when encountered structual errors in a file
  nameSuffix:
    Description: provides suffix to each glue job/lambda function that varies from run to run. This will be useful to distinguish developer specific function while testing his code.
    Type: String
    Default: _mvp2
  tagEnvironment:
    Description: provides the environment name whose value will be replaced in few tags and also utilised by some environment variables in functions/jobs.
    Type: String
    Default: DEV
  fileNameEnvironment:
    Description: provides the environment name whose value will be replaced in incoming/outgoing file names in function variables
    Type: String
    Default: TST  
  deploymentEnvironment:
    Description: provides the environment name where deployment is happening and is used as environment variable by many functions
    Type: String
    Default: SIT
  acchistOutFile:
    Description: replaces the value and provides the full outbound acchist file name as per environment
    Type: String
    Default: ACCHIST_TSTLD_BCIINRX_
  fileType:
    Description: provides the environment name whose value will be replaced in environment variables in functions/jobs.
    Type: String
    Default: T
  cfxBciBucket:
    Description: provides the name of cfx bucket where outbound BCI files are to be sent
    Type: String
    Default: irx-nonprod-bci-east-1-sftp-app-outbound
  cfxCvsBucket:
    Description: provides the name of cfx bucket where outbound CVS files are to be sent
    Type: String
    Default: irx-nonprod-cvs-east-1-sftp-app-outbound
  cfxBciFolder:
    Description: provides the path of cfx folder where outbound BCI files are to be sent
    Type: String
    Default: sit/accums/
  secretManager:
    Description: complete name of the secret manager service that provides credentails for connecting to redshift database
    Type: String
    Default: irx-ahub-dv-redshift-cluster
  skipDelivery:
    Description: makes the decision whether to send the outbound file to cfx folder or not 
    Type: String
    Default: "FALSE"    
  securityGroups:
    Description: list of SecurityGroupIds in your AWS account VPC
    Type: CommaDelimitedList
    Default: sg-0f181993547c48186, sg-0411ae853409470fd, sg-077f4be9869df056a
  subnetIds:
    Description: list of subnetIds in your AWS account VPC
    Type: CommaDelimitedList
    Default: subnet-021888688bf4705c0, subnet-01460daa36a0b1381
  tagRegion:
    Description: provides the global region of AWS account used in tags
    Type: String
    Default: AWS -East 1
Resources:
  InvokePermissionZipUnzipHandler:
    Type: AWS::Lambda::Permission
    DependsOn: incomingFileZipUnzip
    Properties:
      FunctionName:
        Fn::GetAtt:
          - incomingFileZipUnzip
          - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:s3:::${triggerBucket}
        
  InvokePermissionBciToCvs:
    Type: AWS::Lambda::Permission
    DependsOn: processBciFileDeliverToCvs
    Properties:
      FunctionName:
        Fn::GetAtt:
          - processBciFileDeliverToCvs
          - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:s3:::${triggerBucket}

  InvokePermissionBciErrorToCvs:
    Type: AWS::Lambda::Permission
    DependsOn: processBciErrorFileDeliverToCvs
    Properties:
      FunctionName:
        Fn::GetAtt:
          - processBciErrorFileDeliverToCvs
          - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:s3:::${triggerBucket}
        
  InvokePermissionCvsToBci:
    Type: AWS::Lambda::Permission
    DependsOn: processHourlyCvsFileLoadInDatabase
    Properties:
      FunctionName:
        Fn::GetAtt:
          - processHourlyCvsFileLoadInDatabase
          - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:s3:::${triggerBucket} 
        
  InvokePermissionAccumhistCvsToCvs:
    Type: AWS::Lambda::Permission
    DependsOn: processAccumhistCvsFileLoadInDatabase
    Properties:
      FunctionName:
        Fn::GetAtt:
          - processAccumhistCvsFileLoadInDatabase
          - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:s3:::${triggerBucket} 
        
  InvokePermissionRecon:
    Type: AWS::Lambda::Permission
    DependsOn: processReconFileInDatabase
    Properties:
      FunctionName:
        Fn::GetAtt:
          - processReconFileInDatabase
          - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:s3:::${triggerBucket}
                    
  InvokePermissionzipCvsAndSendToBci:
    Type: AWS::Lambda::Permission
    DependsOn: zipCvsAndSendToBci
    Properties:
      FunctionName:
        Fn::GetAtt:
          - zipCvsAndSendToBci
          - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:s3:::${triggerBucket}
                  
  InvokePermissionZipBciAndSendToCvs:
    Type: AWS::Lambda::Permission
    DependsOn: zipBciAndSendToCvs
    Properties:
      FunctionName:
        Fn::GetAtt:
          - zipBciAndSendToCvs
          - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:s3:::${triggerBucket}
               
  InvokePermissionZipAccumhistAndSendToCvs:
    Type: AWS::Lambda::Permission
    DependsOn: zipAccumhistAndSendToCvs
    Properties:
      FunctionName:
        Fn::GetAtt:
          - zipAccumhistAndSendToCvs
          - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:s3:::${triggerBucket}
  
  incomingFileZipUnzip:
   Type: 'AWS::Lambda::Function'
   Properties:
     Code:
       ZipFile: |
         def lambda_handler(event, context):
            return 'This is a Lambda Function';
     Environment:
       Variables:
         ARN_AHUB_EMAIL_NOTIF: !Ref snsArn
         ENVIRONMENT: !Ref tagEnvironment
         GLUE_JOB_NAME: !Sub irxah_log_job_status${nameSuffix}
         SECRET_NAME: !Ref secretManager
     FunctionName: !Sub irxah_incoming_file_zip_unzip${nameSuffix}
     Handler: 'irxah.handlers.unzip_handler'
     Layers:
       - !Ref layerWithVersionArn
     Role: !Ref lambdaRoleArn
     Tags: 
       - 
         Key: Date/Time
         Value: 20200318101010
       -  
         Key: Application Runtime Platform
         Value: Python 3.7
       - 
         Key: Opt In/Opt Out
         Value: Yes
       - 
         Key: BarometerIT
         Value: 041800001L7T
       - 
         Key: COSTCENTER
         Value: 6590196400
       - 
         Key: COMPLIANCE
         Value: PHI
       - 
         Key: IT Department
         Value: Anbu Ramaiyan
       - 
         Key: Database
         Value: RedShift
       - 
         Key: Resource Type
         Value: LAMBDA
       - 
         Key: NAME
         Value: !Sub 'IRX-AHUB-GLUE-${tagEnvironment}-ETL'
       - 
         Key: Layer
         Value: CODE
       - 
         Key: Owner Department
         Value: Saneeja Abdeen
       - 
         Key: Virtualization Platform
         Value: N/A
       - 
         Key: Application
         Value: AHUB
       - 
         Key: Operating System
         Value: N/A
       - 
         Key: Company
         Value: IRX
       - 
         Key: Environment
         Value: !Ref tagEnvironment
       - 
         Key: Location
         Value: !Ref tagRegion
         
     MemorySize: 3008
     Timeout: 900
     Runtime: 'python3.7'
     VpcConfig:
       SecurityGroupIds: !Ref securityGroups
       SubnetIds: !Ref subnetIds 
         
  processBciFileDeliverToCvs:
   Type: 'AWS::Lambda::Function'
   Properties:
     Code:
       ZipFile: |
         def lambda_handler(event, context):
            return 'This is a Lambda Function';
     Environment:
       Variables:
         ARCHIVE_FOLDER: inbound/bci/archive
         CLIENT_FILE_ID: 1
         ERROR_FOLDER: inbound/bci/error
         EXPECTED_LINE_LENGTH: 1700
         FILE_PROCESSING_LOCATION: inbound/bci/temp
         FILE_TYPE: !Ref fileType
         GLUE_JOB_NAME: !Sub irxah_process_bci_file_deliver_to_cvs${nameSuffix}
         IAM_ARN: !Ref redshiftGlueArn
         INBOUND_BUCKET_NAME: !Ref dataBucket
         INBOUND_FOLDER: inbound/bci/txtfiles
         INPUT_RECEIVER_ID: 10110INGENIORX
         INPUT_SENDER_ID: 20500BCIDAHO
         OUTPUT_RECEIVER_ID: 00990CAREMARK
         OUTPUT_SENDER_ID: 00489INGENIORX
         POSITION_SPECIFICATION_FILE: inbound/bci/specification/bci_range.txt
         REDSHIFT_DB_SCHEMA: ahub_stg
         REDSHIFT_JOB_DB_SCHEMA: ahub_dw
         REDSHIFT_TABLE: stg_accum_dtl
         S3_MERGE_OUTPUT_PATH: outbound/cvs/txtfiles
         S3_MERGE_OUTPUT_PREFIX: !Sub ACCDLYINT_${fileNameEnvironment}_INRXBCI_
         SECRET_NAME: !Ref secretManager
         STRUCT_VALIDATION_SPECIFICATION_FILE_NAME: inbound/bci/specification/bcipositions.csv
         TRANSMISSION_FILE_TYPE: T
         VALIDATE_FILE: "TRUE"
         ENV_LEVEL: !Ref deploymentEnvironment
     FunctionName: !Sub irxah_process_bci_file${nameSuffix}
     Handler: 'irxah.handlers.process_handler'
     Layers:
       - !Ref layerWithVersionArn
     Role: !Ref lambdaRoleArn
     Tags: 
       - 
         Key: Date/Time
         Value: 20200318101010
       -  
         Key: Application Runtime Platform
         Value: Python 3.7
       - 
         Key: Opt In/Opt Out
         Value: Yes
       - 
         Key: BarometerIT
         Value: 041800001L7T
       - 
         Key: COSTCENTER
         Value: 6590196400
       - 
         Key: COMPLIANCE
         Value: PHI
       - 
         Key: IT Department
         Value: Anbu Ramaiyan
       - 
         Key: Database
         Value: RedShift
       - 
         Key: Resource Type
         Value: LAMBDA
       - 
         Key: NAME
         Value: !Sub 'IRX-AHUB-GLUE-${tagEnvironment}-ETL'
       - 
         Key: Layer
         Value: CODE
       - 
         Key: Owner Department
         Value: Saneeja Abdeen
       - 
         Key: Virtualization Platform
         Value: N/A
       - 
         Key: Application
         Value: AHUB
       - 
         Key: Operating System
         Value: N/A
       - 
         Key: Company
         Value: IRX
       - 
         Key: Environment
         Value: !Ref tagEnvironment
       - 
         Key: Location
         Value: !Ref tagRegion
         
     MemorySize: 3008
     Timeout: 900
     Runtime: 'python3.7'
     VpcConfig:
       SecurityGroupIds: !Ref securityGroups
       SubnetIds: !Ref subnetIds

  processBciErrorFileDeliverToCvs:
   Type: 'AWS::Lambda::Function'
   Properties:
     Code:
       ZipFile: |
         def lambda_handler(event, context):
            return 'This is a Lambda Function';
     Environment:
       Variables:
         ARCHIVE_FOLDER: inbound/bci/archive
         CLIENT_FILE_ID: 7
         ERROR_FOLDER: inbound/bci/error
         EXPECTED_LINE_LENGTH: 1700
         FILE_PROCESSING_LOCATION: inbound/bci/temp
         GLUE_JOB_NAME: !Sub irxah_process_bci_file_deliver_to_cvs${nameSuffix}
         IAM_ARN: !Ref redshiftGlueArn
         INBOUND_BUCKET_NAME: !Ref dataBucket
         INBOUND_FOLDER: inbound/bci/txtfiles
         POSITION_SPECIFICATION_FILE: inbound/bci/specification/bci_range.txt
         SECRET_NAME: !Ref secretManager
         STRUCT_VALIDATION_SPECIFICATION_FILE_NAME: inbound/bci/specification/bcierrorpositions.csv
         VALIDATE_DETAIL_RECORDS_IN_FILE_STRUCTURE: "REQUIRED"
         VALIDATE_FILE: "FALSE"
         ENV_LEVEL: !Ref deploymentEnvironment
     FunctionName: !Sub irxah_process_bci_error_file${nameSuffix}
     Handler: 'irxah.handlers.process_handler'
     Layers:
       - !Ref layerWithVersionArn
     Role: !Ref lambdaRoleArn
     Tags: 
       - 
         Key: Date/Time
         Value: 20200318101010
       -  
         Key: Application Runtime Platform
         Value: Python 3.7
       - 
         Key: Opt In/Opt Out
         Value: Yes
       - 
         Key: BarometerIT
         Value: 041800001L7T
       - 
         Key: COSTCENTER
         Value: 6590196400
       - 
         Key: COMPLIANCE
         Value: PHI
       - 
         Key: IT Department
         Value: Anbu Ramaiyan
       - 
         Key: Database
         Value: RedShift
       - 
         Key: Resource Type
         Value: LAMBDA
       - 
         Key: NAME
         Value: !Sub 'IRX-AHUB-GLUE-${tagEnvironment}-ETL'
       - 
         Key: Layer
         Value: CODE
       - 
         Key: Owner Department
         Value: Saneeja Abdeen
       - 
         Key: Virtualization Platform
         Value: N/A
       - 
         Key: Application
         Value: AHUB
       - 
         Key: Operating System
         Value: N/A
       - 
         Key: Company
         Value: IRX
       - 
         Key: Environment
         Value: !Ref tagEnvironment
       - 
         Key: Location
         Value: !Ref tagRegion
         
     MemorySize: 3008
     Timeout: 900
     Runtime: 'python3.7'
     VpcConfig:
       SecurityGroupIds: !Ref securityGroups
       SubnetIds: !Ref subnetIds          
         
  processHourlyCvsFileLoadInDatabase:
   Type: 'AWS::Lambda::Function'
   Properties:
     Code:
      ZipFile: |
         def lambda_handler(event, context):
            return 'This is a Lambda Function';
     Environment:
       Variables:
         ARCHIVE_FOLDER: inbound/cvs/archive
         CLIENT_FILE_ID: 3
         ERROR_FOLDER: inbound/cvs/error
         EXPECTED_LINE_LENGTH: 1700
         FILE_PROCESSING_LOCATION: inbound/cvs/temp
         GLUE_JOB_NAME: !Sub irxah_process_hourly_cvs_file_load_in_database${nameSuffix}
         IAM_ARN: !Ref redshiftGlueArn
         INBOUND_BUCKET_NAME: !Ref dataBucket
         INBOUND_FOLDER: inbound/cvs/txtfiles
         POSITION_SPECIFICATION_FILE: inbound/cvs/specification/cvs_range.txt
         REDSHIFT_DB_SCHEMA: ahub_stg
         REDSHIFT_JOB_DB_SCHEMA: ahub_dw
         REDSHIFT_TABLE: stg_accum_dtl
         SECRET_NAME: !Ref secretManager
         STRUCT_VALIDATION_SPECIFICATION_FILE_NAME: inbound/cvs/specification/cvspositions.csv
         TRANSMISSION_FILE_TYPE: T
         VALIDATE_FILE: "TRUE"
         ENV_LEVEL: !Ref deploymentEnvironment
     FunctionName: !Sub irxah_process_hourly_cvs_file${nameSuffix}
     Handler: 'irxah.handlers.process_handler'
     Layers:
       - !Ref layerWithVersionArn
     Role: !Ref lambdaRoleArn 
     Tags: 
       - 
         Key: Date/Time
         Value: 20200318101010
       -  
         Key: Application Runtime Platform
         Value: Python 3.7
       - 
         Key: Opt In/Opt Out
         Value: Yes
       - 
         Key: BarometerIT
         Value: 041800001L7T
       - 
         Key: COSTCENTER
         Value: 6590196400
       - 
         Key: COMPLIANCE
         Value: PHI
       - 
         Key: IT Department
         Value: Anbu Ramaiyan
       - 
         Key: Database
         Value: RedShift
       - 
         Key: Resource Type
         Value: LAMBDA
       - 
         Key: NAME
         Value: !Sub 'IRX-AHUB-GLUE-${tagEnvironment}-ETL'
       - 
         Key: Layer
         Value: CODE
       - 
         Key: Owner Department
         Value: Saneeja Abdeen
       - 
         Key: Virtualization Platform
         Value: N/A
       - 
         Key: Application
         Value: AHUB
       - 
         Key: Operating System
         Value: N/A
       - 
         Key: Company
         Value: IRX
       - 
         Key: Environment
         Value: !Ref tagEnvironment
       - 
         Key: Location
         Value: !Ref tagRegion
         
     MemorySize: 3008
     Timeout: 900
     Runtime: 'python3.7'
     VpcConfig:
       SecurityGroupIds: !Ref securityGroups
       SubnetIds: !Ref subnetIds
         
  processAccumhistCvsFileLoadInDatabase:
  # Processes the incoming CVS history file , puts in database and then generates the output CVS history flie to be sent back to CVS
  # To Do : logical name should be : process_cvs_history_file_deliver_to_cvs
   Type: 'AWS::Lambda::Function'
   Properties:
     Code:
      ZipFile: |
         def lambda_handler(event, context):
            return 'This is a Lambda Function';
     Environment:
       Variables:
         ARCHIVE_FOLDER: inbound/cvs/archive
         CLIENT_FILE_ID: 4
         ERROR_FOLDER: inbound/cvs/error
         FILE_PROCESSING_LOCATION: inbound/cvs/temp
         FILE_TYPE: !Ref fileType
         GLUE_JOB_NAME: !Sub irxah_process_cvs_acc_history_file_deliver_to_cvs${nameSuffix}
         IAM_ARN: !Ref redshiftGlueArn
         INBOUND_BUCKET_NAME: !Ref dataBucket
         INBOUND_FOLDER: inbound/cvs/txtfiles
         POSITION_SPECIFICATION_FILE: inbound/cvs/specification/accumhist_range.txt
         CROSSWALK_FILE: inbound/cvs/specification/crosswalk_file.txt
         S3_MERGE_OUTPUT_PATH: outbound/cvs/history
         S3_MERGE_OUTPUT_PREFIX: !Ref acchistOutFile
         SECRET_NAME: !Ref secretManager
         VALIDATE_FILE: "FALSE"
         ENV_LEVEL: !Ref deploymentEnvironment
     FunctionName: !Sub irxah_process_cvs_acc_history_file${nameSuffix}
     Handler: 'irxah.handlers.process_handler'
     Layers:
       - !Ref layerWithVersionArn
     Role: !Ref lambdaRoleArn 
     Tags: 
       - 
         Key: Date/Time
         Value: 20200318101010
       -  
         Key: Application Runtime Platform
         Value: Python 3.7
       - 
         Key: Opt In/Opt Out
         Value: Yes
       - 
         Key: BarometerIT
         Value: 041800001L7T
       - 
         Key: COSTCENTER
         Value: 6590196400
       - 
         Key: COMPLIANCE
         Value: PHI
       - 
         Key: IT Department
         Value: Anbu Ramaiyan
       - 
         Key: Database
         Value: RedShift
       - 
         Key: Resource Type
         Value: LAMBDA
       - 
         Key: NAME
         Value: !Sub 'IRX-AHUB-GLUE-${tagEnvironment}-ETL'
       - 
         Key: Layer
         Value: CODE
       - 
         Key: Owner Department
         Value: Saneeja Abdeen
       - 
         Key: Virtualization Platform
         Value: N/A
       - 
         Key: Application
         Value: AHUB
       - 
         Key: Operating System
         Value: N/A
       - 
         Key: Company
         Value: IRX
       - 
         Key: Environment
         Value: !Ref tagEnvironment
       - 
         Key: Location
         Value: !Ref tagRegion
         
     MemorySize: 3008
     Timeout: 900
     Runtime: 'python3.7'
     VpcConfig:
       SecurityGroupIds: !Ref securityGroups
       SubnetIds: !Ref subnetIds
         
  processReconFileInDatabase:
   Type: 'AWS::Lambda::Function'
   Properties:
     Code:
      ZipFile: |
         def lambda_handler(event, context):
            return 'This is a Lambda Function';
     Environment:
       Variables:
         ARCHIVE_FOLDER: inbound/cvs/archive
         CLIENT_FILE_ID: 6
         ERROR_FOLDER: inbound/cvs/error
         EXPECTED_LINE_LENGTH: 800
         FILE_PROCESSING_LOCATION: inbound/cvs/temp
         GLUE_JOB_NAME: !Sub irxah_process_recon_file_in_database${nameSuffix}
         IAM_ARN: !Ref redshiftGlueArn
         INBOUND_BUCKET_NAME: !Ref dataBucket
         INBOUND_FOLDER: inbound/cvs/txtfiles
         S3_INBOUND_DETAIL_PATH: inbound/cvs/temp/dtl/
         S3_INBOUND_DETAIL_TEMP_FILE_PATH: inbound/cvs/temp/dtl/RECACC_
         POSITION_SPECIFICATION_FILE: inbound/cvs/specification/recon_range.txt
         REDSHIFT_DB_SCHEMA: ahub_stg
         REDSHIFT_JOB_DB_SCHEMA: ahub_dw
         REDSHIFT_TABLE: stg_accum_dtl
         SECRET_NAME: !Ref secretManager
         STRUCT_VALIDATION_SPECIFICATION_FILE_NAME: inbound/cvs/specification/reconpositions.csv
         TRANSMISSION_FILE_TYPE: T
         VALIDATE_FILE: "FALSE"
         ENV_LEVEL: !Ref deploymentEnvironment
     FunctionName: !Sub irxah_process_recon_file${nameSuffix}    
     Handler: 'irxah.handlers.process_handler'
     Layers:
       - !Ref layerWithVersionArn
     Role: !Ref lambdaRoleArn 
     Tags: 
       - 
         Key: Date/Time
         Value: 20200318101010
       -  
         Key: Application Runtime Platform
         Value: Python 3.7
       - 
         Key: Opt In/Opt Out
         Value: Yes
       - 
         Key: BarometerIT
         Value: 041800001L7T
       - 
         Key: COSTCENTER
         Value: 6590196400
       - 
         Key: COMPLIANCE
         Value: PHI
       - 
         Key: IT Department
         Value: Anbu Ramaiyan
       - 
         Key: Database
         Value: RedShift
       - 
         Key: Resource Type
         Value: LAMBDA
       - 
         Key: NAME
         Value: !Sub 'IRX-AHUB-GLUE-${tagEnvironment}-ETL'
       - 
         Key: Layer
         Value: CODE
       - 
         Key: Owner Department
         Value: Saneeja Abdeen
       - 
         Key: Virtualization Platform
         Value: N/A
       - 
         Key: Application
         Value: AHUB
       - 
         Key: Operating System
         Value: N/A
       - 
         Key: Company
         Value: IRX
       - 
         Key: Environment
         Value: !Ref tagEnvironment
       - 
         Key: Location
         Value: !Ref tagRegion
         
     MemorySize: 3008
     Timeout: 900
     Runtime: 'python3.7'
     VpcConfig:
       SecurityGroupIds: !Ref securityGroups
       SubnetIds: !Ref subnetIds

  zipCvsAndSendToBci:
   Type: 'AWS::Lambda::Function'
   Properties:
     Code:
      ZipFile: |
         def lambda_handler(event, context):
            return 'This is a Lambda Function';
     Environment:
       Variables:
         DESTINATION_BUCKET_CFX: !Ref cfxBciBucket
         DESTINATION_FOLDER_CFX: !Ref cfxBciFolder
         SKIP_DELIVERY: !Ref skipDelivery
     FunctionName: !Sub irxah_send_files_to_bci${nameSuffix}    
     Handler: 'irxah.handlers.zip_handler'
     Layers:
       - !Ref layerWithVersionArn
     Role: !Ref lambdaRoleArnMoveToCfx 
     Tags: 
       - 
         Key: Date/Time
         Value: 20200318101010
       -  
         Key: Application Runtime Platform
         Value: Python 3.7
       - 
         Key: Opt In/Opt Out
         Value: Yes
       - 
         Key: BarometerIT
         Value: 041800001L7T
       - 
         Key: COSTCENTER
         Value: 6590196400
       - 
         Key: COMPLIANCE
         Value: PHI
       - 
         Key: IT Department
         Value: Anbu Ramaiyan
       - 
         Key: Database
         Value: RedShift
       - 
         Key: Resource Type
         Value: LAMBDA
       - 
         Key: NAME
         Value: !Sub 'IRX-AHUB-GLUE-${tagEnvironment}-ETL'
       - 
         Key: Layer
         Value: CODE
       - 
         Key: Owner Department
         Value: Saneeja Abdeen
       - 
         Key: Virtualization Platform
         Value: N/A
       - 
         Key: Application
         Value: AHUB
       - 
         Key: Operating System
         Value: N/A
       - 
         Key: Company
         Value: IRX
       - 
         Key: Environment
         Value: !Ref tagEnvironment
       - 
         Key: Location
         Value: !Ref tagRegion
         
     MemorySize: 3008
     Timeout: 900
     Runtime: 'python3.7'
     VpcConfig:
       SecurityGroupIds: !Ref securityGroups
       SubnetIds: !Ref subnetIds

  zipBciAndSendToCvs:
   Type: 'AWS::Lambda::Function'
   Properties:
     Code:
      ZipFile: |
         def lambda_handler(event, context):
            return 'This is a Lambda Function';
     Environment:
       Variables:
         DESTINATION_BUCKET_CFX: !Ref cfxCvsBucket
         DESTINATION_FOLDER_CFX: CDH_Accumulations/
         SKIP_DELIVERY: !Ref skipDelivery
     FunctionName: !Sub irxah_send_files_to_cvs${nameSuffix}    
     Handler: 'irxah.handlers.zip_handler'
     Layers:
       - !Ref layerWithVersionArn
     Role: !Ref lambdaRoleArnMoveToCfx 
     Tags: 
       - 
         Key: Date/Time
         Value: 20200318101010
       -  
         Key: Application Runtime Platform
         Value: Python 3.7
       - 
         Key: Opt In/Opt Out
         Value: Yes
       - 
         Key: BarometerIT
         Value: 041800001L7T
       - 
         Key: COSTCENTER
         Value: 6590196400
       - 
         Key: COMPLIANCE
         Value: PHI
       - 
         Key: IT Department
         Value: Anbu Ramaiyan
       - 
         Key: Database
         Value: RedShift
       - 
         Key: Resource Type
         Value: LAMBDA
       - 
         Key: NAME
         Value: !Sub 'IRX-AHUB-GLUE-${tagEnvironment}-ETL'
       - 
         Key: Layer
         Value: CODE
       - 
         Key: Owner Department
         Value: Saneeja Abdeen
       - 
         Key: Virtualization Platform
         Value: N/A
       - 
         Key: Application
         Value: AHUB
       - 
         Key: Operating System
         Value: N/A
       - 
         Key: Company
         Value: IRX
       - 
         Key: Environment
         Value: !Ref tagEnvironment
       - 
         Key: Location
         Value: !Ref tagRegion
         
     MemorySize: 3008
     Timeout: 900
     Runtime: 'python3.7'
     VpcConfig:
       SecurityGroupIds: !Ref securityGroups
       SubnetIds: !Ref subnetIds
       
  zipAccumhistAndSendToCvs:
   Type: 'AWS::Lambda::Function'
   Properties:
     Code:
      ZipFile: |
         def lambda_handler(event, context):
            return 'This is a Lambda Function';
     Environment:
       Variables:
         DESTINATION_BUCKET_CFX: !Ref cfxCvsBucket
         DESTINATION_FOLDER_CFX: Vendor_Transition/
         SKIP_DELIVERY: !Ref skipDelivery
     FunctionName: !Sub irxah_send_accum_history_file_to_cvs${nameSuffix}    
     Handler: 'irxah.handlers.zip_handler'
     Layers:
       - !Ref layerWithVersionArn
     Role: !Ref lambdaRoleArnMoveToCfx 
     Tags: 
       - 
         Key: Date/Time
         Value: 20200318101010
       -  
         Key: Application Runtime Platform
         Value: Python 3.7
       - 
         Key: Opt In/Opt Out
         Value: Yes
       - 
         Key: BarometerIT
         Value: 041800001L7T
       - 
         Key: COSTCENTER
         Value: 6590196400
       - 
         Key: COMPLIANCE
         Value: PHI
       - 
         Key: IT Department
         Value: Anbu Ramaiyan
       - 
         Key: Database
         Value: RedShift
       - 
         Key: Resource Type
         Value: LAMBDA
       - 
         Key: NAME
         Value: !Sub 'IRX-AHUB-GLUE-${tagEnvironment}-ETL'
       - 
         Key: Layer
         Value: CODE
       - 
         Key: Owner Department
         Value: Saneeja Abdeen
       - 
         Key: Virtualization Platform
         Value: N/A
       - 
         Key: Application
         Value: AHUB
       - 
         Key: Operating System
         Value: N/A
       - 
         Key: Company
         Value: IRX
       - 
         Key: Environment
         Value: !Ref tagEnvironment
       - 
         Key: Location
         Value: !Ref tagRegion
         
     MemorySize: 3008
     Timeout: 900
     Runtime: 'python3.7'
     VpcConfig:
       SecurityGroupIds: !Ref securityGroups
       SubnetIds: !Ref subnetIds